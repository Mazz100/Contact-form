@use "reset.scss";

//Variables
$body-bg-color: hsl(148, 38%, 91%);
$interactive-color: hsl(169, 82%, 27%);
$interactive-hover-color: hsl(171, 83%, 14%);
$input-border: hsl(0, 0%, 50%);
$error-text: hsl(0, 66%, 54%);

@mixin flexDisplay($direction, $align, $justify) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}

//react dom element
#root {
  @include flexDisplay(column, center, center);
  min-height: 100vh;
  width: 100%;
}

body {
  font-family: "Karla", sans-serif;
  background-color: $body-bg-color;

  @include flexDisplay(column, center, center);
}

main {
  max-width: 21rem;
  @include flexDisplay(column, center, center);
}

.header-wrapper {
  @include flexDisplay(column, start, space-between);

  span {
    margin-bottom: 0.5rem;
  }
}

.header-h1 {
  margin-bottom: 0.5rem;
}

.contact-form {
  background-color: #fff;
  padding: 1.2rem;
  border-radius: 12px;
}

// Personal information
.input-text-label {
  margin-bottom: 2rem;
  width: 100%;
}

.asterisk {
  width: 0.5rem;
  height: 0.5rem;
  margin-left: 0.2rem;
  margin-bottom: 0.2rem;
}

.text-input {
  padding: 0.4rem;
  margin-block: 0.5rem;
  border-radius: 6px;
  border: solid 1px $input-border;
  width: 100%;
  transition: border-color 150ms ease-in, box-shadow 200ms ease;
}

.text-input:hover {
  border-color: $interactive-color;
}

.text-input:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px $interactive-color;
}

.text-input:valid {
  border-color: $interactive-color;
}

//Query type information
.query-fieldset {
  padding: 0;
  margin: 0;
  border: none;
}

.query-legend {
  margin-block: 0.8rem;
}

.query-label {
  width: 100%;
  cursor: pointer;
  border: $input-border 1px solid;
  @include flexDisplay(row, center, start);
  margin-bottom: 1rem;
  padding: 0.7rem;
  border-radius: 6px;
  transition: border-color 150ms ease-in;
}

.query-label:hover {
  border-color: $interactive-color;
}

.query-input {
  margin: 0;
  margin-right: 0.6rem;
  width: 20px;
  height: 20px;
  position: relative;
  appearance: none;
  display: grid;
  place-content: center;
}

.query-input:focus {
  outline: none;
}

//Storing input width and height for scalability of checked visuals
$radio-border-w: 20px;
$radio-border-h: 20px;
.query-input::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 50%;
  width: $radio-border-w;
  height: $radio-border-h;
  border: $input-border 1px solid;
  transition: border-color 200ms ease-in;
}

.query-input:hover::before {
  border-color: $interactive-color;
}

.query-input:focus::before {
  outline: $interactive-color 2px solid;
  outline-offset: 2px;
}

.query-input::after {
  position: absolute;
  content: "";
  top: 4px;
  left: 4px;
  width: calc($radio-border-w - 8px);
  height: calc($radio-border-h - 8px);
  background-color: $interactive-color;
  border-radius: 50%;
  transition: transform 100ms ease-in;
  transform: scale(0);
}

.query-input:checked::before {
  border-color: $interactive-color;
}

.query-input:checked::after {
  transform: scale(1);
}

.query-label:has(.query-input:checked) {
  background-color: $body-bg-color;
  border-color: $interactive-color;
}

//Message field
.message-text {
  padding: 0.4rem;
  margin-top: 0.5rem;
  border-radius: 6px;
  border: solid 1px $input-border;
  width: 100%;
  resize: vertical;
  transition: border-color 200ms ease-in, box-shadow 200ms ease-in;
}

.message-text:hover {
  border-color: $interactive-color;
}

.message-text:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px $interactive-color;
}

.message-text:valid {
  border-color: $interactive-color;
}

.messag-length-wrapper {
  width: 100%;
  text-align: right;
  span {
    font-size: 0.925rem;
    font-style: italic;
  }
}

// Checkbox field
.checkbox-wrapper {
  @include flexDisplay(row, center, start);
  margin-top: 1.5rem;
  margin-bottom: 1rem;
}

.input-checkbox-label {
  font-size: 0.925rem;
  font-weight: 500;
  cursor: pointer;
}

.checkbox-input {
  margin: 0;
  margin-right: 1rem;
  position: relative;
  appearance: none;
  width: 20px;
  height: 20px;
}

.checkbox-input:focus {
  outline: none;
}

.checkbox-input::before {
  content: "";
  position: absolute;
  width: 20px;
  height: 20px;
  top: 0;
  left: 0;
  border-radius: 2px;
  border: $input-border 1px solid;
}

.checkbox-input:focus-visible::before {
  outline: $interactive-color 2px solid;
  outline-offset: 3px;
}

.checkbox-input:hover::before {
  border-color: $interactive-color;
}

.checkbox-input::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 20px;
  height: 20px;
  background-image: url(../assets/images/icon-checkbox-check.svg);
  background-repeat: no-repeat;
  background-size: contain;
  opacity: 0;
  transition: opacity 200ms linear;
}

.checkbox-input:checked::after {
  opacity: 1;
}

// Button submit form
.button-wrapper {
  margin-top: 1rem;
}

.submit-button {
  color: white;
  background-color: $interactive-color;
  padding: 0.8rem;
  width: 100%;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 200ms ease-in;
}

.submit-button:hover {
  background-color: $interactive-hover-color;
}

.submit-button:focus-visible {
  outline: $interactive-color 2px solid;
  outline-offset: 3px;
}

.error-text {
  display: flex;
  width: 100%;
  font-size: 0.875rem;
  color: $error-text;
  margin: 0;
}

//Success message visuals
.success-wrapper {
  $success-bg: hsl(171, 83%, 14%);
  background-color: $success-bg;
  color: white;
  padding: 1rem;
  border-radius: 10px;

  animation: successAnim 0.5s cubic-bezier(0.445, 0.05, 0.55, 0.95);

  .success-header {
    @include flexDisplay(row, center, start);
    gap: 1rem;
    margin-bottom: 0.5rem;
  }

  .success-text {
    opacity: 0.7;
  }
}

@keyframes successAnim {
  from {
    transform: translateY(-100px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

//Footer
footer {
  width: 100%;
}

.attribution {
  $attribution-link: hsl(169, 82%, 27%);
  display: none;
  text-align: center;
  padding: 0.6rem;
  background: white;

  a {
    color: $attribution-link;
    font-weight: 700;
  }
}

// ============= media query breakpoints ==================
@media (min-width: 48rem) and (max-width: 80rem) {
  main {
    max-width: 40rem;
  }

  .contact-form {
    padding: 2rem;
  }

  .header-wrapper {
    flex-direction: row;
    gap: 2rem;
  }
} // Tablet screen size

@media (min-width: 80rem) {
  main {
    max-width: none;
    @include flexDisplay(column, center, center);
    flex: 1;
  }

  .contact-form {
    padding: 2rem;
  }

  .header-wrapper {
    flex-direction: row;
    gap: 0;
  }

  .desktop-text-label-wrapper {
    @include flexDisplay(row, center, center);
    gap: 1rem;
  }

  .query-wrapper {
    @include flexDisplay(row, center, center);
    gap: 1rem;
  }

  .attribution {
    display: block;
  }
} // Desktop screen size
